var mysql=require("mysql");
var func=require("./func");
var pool;

exports.conn=function(ahost,auser,apassword,adatabase)
{
    var conn = mysql.createConnection({
        host: ahost, //主机
        user: auser, //数据库用户名
        password: apassword, //数据库密码
        database: adatabase, //数据库
        port: 3306
    });
    conn.connect();
    return conn;
}

exports.init = function(config)
{
    global.pool=mysql.createPool(config);

    //连接错误，2秒重试
//    global.pool.connection.connect(function (err) {
//        if (err) {
//            func.log('连接数据库失败:', err);
//            setTimeout(handleError , 2000);
//        }
//    });

    global.pool.on('error', function (err) {
        func.log('数据库发生错误:', err);
        // 如果是连接断开，自动重新连接
        if (err.code === 'PROTOCOL_CONNECTION_LOST') {
            handleError();
        } else {
            throw err;
        }
    });
    console.log('数据库启动成功。')
}


//数据库查询  参数 NeedResult  是否必须有查询结构,否则抛出错误
exports.query=query;
function query(SQL,OnQuery) {

    global.pool.getConnection(function (err, conn) {
        if (err) {
            func.log("获取连接池出错:" + err+"\n"+SQL);
            if(OnQuery)
                OnQuery(err,null);
            return
        }

        conn.query(SQL,function(err,rows){
            try
            {
                if (err)
                    func.log("查询数据出错:" + err+"\n"+SQL);

                if (OnQuery) {
                    if (!rows)
                        OnQuery("Null Row", null);
                    else {

                        if (rows.length == 0)
                            OnQuery("Null Row", null);
                        else
                            OnQuery(err, rows[0]);
                        if (rows.length > 1)
                            func.log("Query中出现多条数据结果。" + SQL)
                    }

                }
            }
            catch (error)
            {
                func.log("数据结果处理出错:" + error+"\n"+SQL)
            }
            conn.release();
        });
    });
};
//数据库查询
exports.list=list;
function list(SQL,OnQuery) {

    global.pool.getConnection(function (err, conn) {
        if (err) {
            func.log("获取连接池出错:" + err+"\n"+SQL);
            if(OnQuery)
                OnQuery(err,null);
            return
        }

        conn.query(SQL,function(err,rows){
            try
            {
                if (err)
                    func.log("查询数据出错:" + err+"\n"+SQL);

                if (OnQuery)
                    OnQuery(err,rows);
            }
            catch (error)
            {
                func.log("数据结果处理出错:" + error+"\n"+SQL)
            }
            conn.release();
        });
    });
};
//数据库执行
exports.exec=exec;
function exec(SQL,OnExec) {

    global.pool.getConnection(function (err, conn) {
        if (err) {func.log("获取连接池出错:" + err+"\n"+SQL);if (OnExec)OnExec(err);return}

        conn.query(SQL,function(err,result){

            if (err){func.log("执行数据出错:" + err+"\n"+SQL)}
            try
            {
                if (OnExec)
                    OnExec(err,result);
            }
            catch (error)
            {
                func.log("数据结果处理出错:" + error+"\n"+SQL)
            }
            conn.release();
        });
    });
};
//修改操作(JSON数据)
exports.update=function(tableName,where,data,cb)
{
    if (!data)
    return cb("输入数据为空")

    var whereStr="";
    var dataStr=""
    for (var name in data)
        dataStr+=dataStr?","+name+"='"+data[name]+"'":name+"='"+data[name]+"'";

    for (var name in where)
        whereStr+=whereStr?" and "+name+"='"+where[name]+"'":name+"='"+where[name]+"'";

    var SQL="update "+tableName+" set "+dataStr;
    if (where)
        SQL+=" where "+whereStr;

    exec(SQL,cb)
}
//插入操作(JSON数据)
exports.insert=function(tableName,data,cb)
{
    if (!data)
        return cb()
    var dataStr=""
    for (var name in data)
        dataStr+=dataStr?","+name+"='"+data[name]+"'":name+"='"+data[name]+"'";

    var SQL="Insert into  "+tableName+" set "+dataStr;
    exec(SQL,cb)
}
//缓存数据表
exports.cacheTable=function(tableName,Single,callback) {
    if (Single)
        query("select * from "+tableName, function (err,row) {
            if (err)
            {
                func.log("缓存数据表"+tableName+"出错:"+err)
                return;
            }
            global[tableName]=row


        })
    else
        list("select * from "+tableName, function (err,rows) {
            if (err)
            {
                func.log("缓存数据表"+tableName+"出错:"+err)
                return;
            }
            global[tableName]=rows
            if (callback)
                callback();

        })
}





